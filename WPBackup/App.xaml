<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="WPBackup.App"
             xmlns:wpbackup="clr-namespace:WPBackup"
			 StartupUri="MainWindow.xaml">
    <Application.Resources>
    	<local:Localization xmlns:local ="clr-namespace:WPBackup" x:Key="Localization" />
        <SolidColorBrush x:Key="MainBackgroundColor" Color="#FF2D2D30" />
    	<Style x:Key="HeaderTextStyle" TargetType="{x:Type TextBlock}">
    		<Setter Property="TextWrapping" Value="Wrap" />
    		<Setter Property="Foreground" Value="White" />
    		<Setter Property="FontFamily" Value="Segoe UI Light" />
    		<Setter Property="FontSize" Value="30" />
    		<Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
    		<Setter Property="TextTrimming" Value="None"/>
    		<Setter Property="UseLayoutRounding" Value="True"/>
    		<Setter Property="TextDecorations" Value="{x:Null}"/>
    		<Setter Property="CacheMode">
    			<Setter.Value>
    				<BitmapCache EnableClearType="True" RenderAtScale="1" SnapsToDevicePixels="True"/>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="IsHyphenationEnabled" Value="False"/>
    	</Style>
    	<Style x:Key="SubHeaderTextStyle" TargetType="{x:Type TextBlock}">
    		<Setter Property="TextWrapping" Value="Wrap" />
    		<Setter Property="Foreground" Value="White" />
    		<Setter Property="FontFamily" Value="Segoe UI Light" />
    		<Setter Property="FontSize" Value="20" />
    		<Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    		<Setter Property="TextTrimming" Value="None"/>
    		<Setter Property="UseLayoutRounding" Value="True"/>
    		<Setter Property="TextDecorations" Value="{x:Null}"/>
    		<Setter Property="CacheMode">
    			<Setter.Value>
    				<BitmapCache EnableClearType="True" RenderAtScale="1" SnapsToDevicePixels="True"/>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="IsHyphenationEnabled" Value="False"/>
    	</Style>
    	<Style x:Key="NormalTextStyle" TargetType="{x:Type TextBlock}">
    		<Setter Property="TextWrapping" Value="Wrap" />
    		<Setter Property="Foreground" Value="White" />
    		<Setter Property="FontFamily" Value="Segoe UI" />
    		<Setter Property="FontSize" Value="14" />
    		<Setter Property="TextOptions.TextFormattingMode" Value="Display" />
    		<Setter Property="TextTrimming" Value="None"/>
    		<Setter Property="UseLayoutRounding" Value="True"/>
    		<Setter Property="TextDecorations" Value="{x:Null}"/>
    		<Setter Property="CacheMode">
    			<Setter.Value>
    				<BitmapCache EnableClearType="True" RenderAtScale="1" SnapsToDevicePixels="True"/>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="IsHyphenationEnabled" Value="False"/>
    	</Style>
    	<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="HorizontalContentAlignment" Value="Center"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Padding" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
    						<Grid.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</Grid.RenderTransform>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="0:0:0.5"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="White"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="rectangle">
    											<EasingThicknessKeyFrame KeyTime="0" Value="2"/>
    										</ThicknessAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="grid">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    										</DoubleAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
    											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    										</DoubleAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="grid">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
    											<EasingColorKeyFrame KeyTime="0" Value="White"/>
    										</ColorAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="FocusStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="0:0:0.1"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Unfocused"/>
    								<VisualState x:Name="Focused">
    									<Storyboard>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Rectangle x:Name="rectangle" Fill="#00F4F4F5" Margin="0" Stroke="#CCFFFFFF" StrokeThickness="2"/>
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
    	<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
    	<Style x:Key="EmptyCheckBoxFocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="CheckRadioFocusVisual">
    		<Setter Property="Control.Template">
    			<Setter.Value>
    				<ControlTemplate>
    					<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type CheckBox}">
    					<StackPanel x:Name="stackPanel" Background="Transparent" SnapsToDevicePixels="true" Orientation="Horizontal" RenderOptions.EdgeMode="Aliased">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="0:0:0.1"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Normal"/>
    								<VisualState x:Name="MouseOver" >
    									<Storyboard>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
    											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Pressed">
    									<Storyboard>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
    											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    										</DoubleAnimationUsingKeyFrames>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="rectangle">
    											<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Disabled">
    									<Storyboard>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="stackPanel">
    											<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="CheckStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="0"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Checked">
    									<Storyboard>
    										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
    											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    										</DoubleAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="Unchecked"/>
    								<VisualState x:Name="Indeterminate">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="rectangle1">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    										</ObjectAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    							<VisualStateGroup x:Name="FocusStates">
    								<VisualState x:Name="Unfocused"/>
    								<VisualState x:Name="Focused">
    									<Storyboard>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="stackPanel">
    											<EasingColorKeyFrame KeyTime="0" Value="#0CFFFFFF"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Grid x:Name="grid" Width="20" Opacity="0.8" VerticalAlignment="Center" Margin="0" Height="20" >
                                <Image x:Name="image" Width="Auto" Margin="0" Source="Images/checkbox.png" StretchDirection="DownOnly" Opacity="0"/>
                                <Rectangle x:Name="rectangle" Fill="#00F4F4F5" Stroke="White" HorizontalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0"/>
                                <Rectangle x:Name="rectangle1" Fill="White" Margin="3" StrokeThickness="2" StrokeLineJoin="Round" Visibility="Collapsed"/>
                            </Grid>
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
    					<ControlTemplate.Triggers>
    						<Trigger Property="HasContent" Value="true">
                                <Setter Property="Padding" Value="4,0,0,0"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        <Style x:Key="ProgressBarStyle1" TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="#01D328"/>
            <Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="Background" SnapsToDevicePixels="true">
                            <Border CornerRadius="2" Margin="1" BorderBrush="#FF646464"/>
                            <Border BorderBrush="#FF7E7E7E" BorderThickness="1,0,1,1" Background="{x:Null}" Margin="1" d:IsHidden="True"/>
                            <Rectangle x:Name="PART_Track" Margin="1" d:IsHidden="True"/>
                            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
                                <Grid x:Name="Foreground">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="15"/>
                                        <ColumnDefinition Width="0.1*"/>
                                        <ColumnDefinition MaxWidth="15"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Rectangle x:Name="Indicator" Grid.ColumnSpan="3" Fill="{TemplateBinding Foreground}" Grid.RowSpan="2" d:IsHidden="True"/>
                                    <Rectangle x:Name="Animation" Grid.ColumnSpan="3" Fill="{TemplateBinding Foreground}" Grid.RowSpan="2">
                                        <Rectangle.OpacityMask>
                                            <MultiBinding>
                                                <MultiBinding.Converter>
                                                    <Themes:ProgressBarHighlightConverter/>
                                                </MultiBinding.Converter>
                                                <Binding Source="{StaticResource ProgressBarIndicatorAnimatedFill}"/>
                                                <Binding ElementName="Background" Path="ActualWidth"/>
                                                <Binding ElementName="Background" Path="ActualHeight"/>
                                            </MultiBinding>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <Rectangle x:Name="LeftDark" Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}" Margin="1,1,0,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
                                    <Rectangle x:Name="RightDark" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}" Margin="0,1,1,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2"/>
                                    <Rectangle x:Name="LeftLight" Grid.Column="0" Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}" Grid.Row="2" Visibility="Collapsed"/>
                                    <Rectangle x:Name="CenterLight" Grid.Column="1" Fill="{StaticResource ProgressBarIndicatorLightingEffect}" Grid.Row="2" Visibility="Collapsed"/>
                                    <Rectangle x:Name="RightLight" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}" Grid.Row="2" Visibility="Collapsed"/>
                                    <Border x:Name="Highlight1" Grid.ColumnSpan="3" Grid.RowSpan="2" Visibility="Visible">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#90000000"/>
                                                <GradientStop Color="#001A1010" Offset="1"/>
                                                <GradientStop Color="#66000000"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </Decorator>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="Background">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="LayoutTransform" TargetName="PART_Track">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="LayoutTransform" TargetName="PART_Indicator">
                                    <Setter.Value>
                                        <RotateTransform Angle="90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="LayoutTransform" TargetName="Foreground">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="LeftDark" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="RightDark" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="LeftLight" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="CenterLight" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="RightLight" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="false">
                                <Setter Property="Fill" TargetName="Animation" Value="#80B5FFA9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ProgressBarBackground" EndPoint="1,0" StartPoint="0,0">
        	<GradientStop Color="#BABABA" Offset="0"/>
        	<GradientStop Color="#C7C7C7" Offset="0.5"/>
        	<GradientStop Color="#BABABA" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ProgressBarBorderBrush" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#B2B2B2" Offset="0"/>
        	<GradientStop Color="#8C8C8C" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ProgressBarGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#50FFFFFF" Offset="0.5385"/>
        	<GradientStop Color="#00FFFFFF" Offset="0.5385"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ProgressBarTopHighlight" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#80FFFFFF" Offset="0.05"/>
        	<GradientStop Color="#00FFFFFF" Offset="0.25"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" EndPoint="2,0" StartPoint="-1,0">
            <GradientStop Color="#00FFFFFF" Offset="0"/>
            <GradientStop Color="#20FFFFFF" Offset="0.5"/>
            <GradientStop Color="#00FFFFFF" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft" EndPoint="1,0" StartPoint="0,0">
        	<GradientStop Color="#0C000000" Offset="0"/>
        	<GradientStop Color="#20000000" Offset="0.3"/>
        	<GradientStop Color="#00000000" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight" EndPoint="1,0" StartPoint="0,0">
        	<GradientStop Color="#00000000" Offset="0"/>
        	<GradientStop Color="#20000000" Offset="0.7"/>
        	<GradientStop Color="#0C000000" Offset="1"/>
        </LinearGradientBrush>
        <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft" RadiusY="1" RadiusX="1" RelativeTransform="1,0,0,1,0.5,0.5">
        	<GradientStop Color="#60FFFFC4" Offset="0"/>
        	<GradientStop Color="#00FFFFC4" Offset="1"/>
        </RadialGradientBrush>
        <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect" EndPoint="0,0" StartPoint="0,1">
        	<GradientStop Color="#60FFFFC4" Offset="0"/>
        	<GradientStop Color="#00FFFFC4" Offset="1"/>
        </LinearGradientBrush>
        <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight" RadiusY="1" RadiusX="1" RelativeTransform="1,0,0,1,-0.5,0.5">
        	<GradientStop Color="#60FFFFC4" Offset="0"/>
        	<GradientStop Color="#00FFFFC4" Offset="1"/>
        </RadialGradientBrush>
        <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#90FFFFFF" Offset="0.5385"/>
        	<GradientStop Color="#00FFFFFF" Offset="0.5385"/>
        </LinearGradientBrush>
        <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
        	<Setter Property="Foreground" Value="#01D328"/>
        	<Setter Property="Background" Value="{StaticResource ProgressBarBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrush}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ProgressBar}">
        				<Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
        					<Rectangle RadiusY="2" RadiusX="2"/>
        					<Border Background="#FF494949" CornerRadius="2" Margin="1"/>
        					<Border BorderBrush="#80292929" BorderThickness="1,0,1,1" Background="{StaticResource ProgressBarTopHighlight}" Margin="1" d:IsHidden="True" Visibility="Collapsed"/>
        					<Rectangle x:Name="PART_Track" Margin="1"/>
        					<Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
        						<Grid x:Name="Foreground">
        							<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>
        							<Grid x:Name="Animation" ClipToBounds="true">
        								<Rectangle x:Name="PART_GlowRect" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="80" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}"/>
                                    </Grid>
        							<Grid x:Name="Overlay">
        								<Grid.ColumnDefinitions>
        									<ColumnDefinition MaxWidth="15"/>
        									<ColumnDefinition Width="0.1*"/>
        									<ColumnDefinition MaxWidth="15"/>
        								</Grid.ColumnDefinitions>
        								<Grid.RowDefinitions>
        									<RowDefinition/>
        									<RowDefinition/>
        								</Grid.RowDefinitions>
        								<Rectangle x:Name="LeftDark" Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft}" Margin="1,1,0,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2" Visibility="Collapsed" d:IsHidden="True"/>
        								<Rectangle x:Name="RightDark" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight}" Margin="0,1,1,1" RadiusY="1" RadiusX="1" Grid.RowSpan="2" d:IsHidden="True" Visibility="Collapsed"/>
        								<Rectangle x:Name="LeftLight" Grid.Column="0" Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft}" Grid.Row="2" d:IsHidden="True" Visibility="Collapsed"/>
        								<Rectangle x:Name="CenterLight" Grid.Column="1" Fill="{StaticResource ProgressBarIndicatorLightingEffect}" Grid.Row="2" d:IsHidden="True" Visibility="Collapsed"/>
        								<Rectangle x:Name="RightLight" Grid.Column="2" Fill="{StaticResource ProgressBarIndicatorLightingEffectRight}" Grid.Row="2" d:IsHidden="True" Visibility="Collapsed"/>
        								<Border x:Name="Highlight1" Grid.ColumnSpan="3" Grid.RowSpan="2" >
        									<Border.Background>
        										<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        											<GradientStop Offset="1"/>
        											<GradientStop Color="#00FFFFFF"/>
        											<GradientStop Color="#3F000000"/>
        										</LinearGradientBrush>
        									</Border.Background>
        								</Border>
        								<Border x:Name="Highlight2" Background="{StaticResource ProgressBarTopHighlight}" Grid.ColumnSpan="3" Grid.RowSpan="2" d:IsHidden="True" Visibility="Collapsed"/>
        							</Grid>
        						</Grid>
        					</Decorator>
        					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" d:IsHidden="True"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="Orientation" Value="Vertical">
        						<Setter Property="LayoutTransform" TargetName="TemplateRoot">
        							<Setter.Value>
        								<RotateTransform Angle="-90"/>
        							</Setter.Value>
        						</Setter>
        					</Trigger>
        					<Trigger Property="IsIndeterminate" Value="true">
        						<Setter Property="Visibility" TargetName="LeftDark" Value="Collapsed"/>
        						<Setter Property="Visibility" TargetName="RightDark" Value="Collapsed"/>
        						<Setter Property="Visibility" TargetName="LeftLight" Value="Collapsed"/>
        						<Setter Property="Visibility" TargetName="CenterLight" Value="Collapsed"/>
        						<Setter Property="Visibility" TargetName="RightLight" Value="Collapsed"/>
        						<Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
        					</Trigger>
        					<Trigger Property="IsIndeterminate" Value="false">
        						<Setter Property="Background" TargetName="Animation" Value="#80B5FFA9"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
